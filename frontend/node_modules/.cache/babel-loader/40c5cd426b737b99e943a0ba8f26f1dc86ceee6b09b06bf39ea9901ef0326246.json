{"ast":null,"code":"/*\r\nimport React, { useState } from 'react';\r\nimport './TodoItem.css';\r\n\r\nconst TodoItem = ({ todo, updateTodo, deleteTodo, startEditing }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [editText, setEditText] = useState(todo.text);\r\n\r\n    const handleEditChange = (e) => {\r\n        setEditText(e.target.value);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        startEditing(todo._id, editText);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <li>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={todo.completed}\r\n                onChange={() => updateTodo(todo._id, todo.completed)}\r\n            />\r\n            {isEditing ? (\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={editText}\r\n                        onChange={handleEditChange}\r\n                    />\r\n                    <button onClick={handleSave}>Save</button>\r\n                </div>\r\n            ) : (\r\n                <span>{todo.text}</span>\r\n            )}\r\n            <button onClick={() => deleteTodo(todo._id)}>Delete</button>\r\n            <button onClick={() => setIsEditing(!isEditing)}>\r\n                {isEditing ? 'Cancel' : 'Edit'}\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default TodoItem;\r\n\r\n\r\n*/","map":{"version":3,"names":[],"sources":["C:/Users/saiku/OneDrive/Desktop/todoApp/frontend/src/components/TodoItem.js"],"sourcesContent":["/*\r\nimport React, { useState } from 'react';\r\nimport './TodoItem.css';\r\n\r\nconst TodoItem = ({ todo, updateTodo, deleteTodo, startEditing }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [editText, setEditText] = useState(todo.text);\r\n\r\n    const handleEditChange = (e) => {\r\n        setEditText(e.target.value);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        startEditing(todo._id, editText);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <li>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={todo.completed}\r\n                onChange={() => updateTodo(todo._id, todo.completed)}\r\n            />\r\n            {isEditing ? (\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={editText}\r\n                        onChange={handleEditChange}\r\n                    />\r\n                    <button onClick={handleSave}>Save</button>\r\n                </div>\r\n            ) : (\r\n                <span>{todo.text}</span>\r\n            )}\r\n            <button onClick={() => deleteTodo(todo._id)}>Delete</button>\r\n            <button onClick={() => setIsEditing(!isEditing)}>\r\n                {isEditing ? 'Cancel' : 'Edit'}\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default TodoItem;\r\n\r\n\r\n*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}