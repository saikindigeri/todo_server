{"ast":null,"code":"/*\n\nimport React, { useState, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport './styles.css';\nimport axios from 'axios';\n\nconst App = () => {\n    const [todos, setTodos] = useState([]);\n    const [newTodo, setNewTodo] = useState('');\n\n    useEffect(() => {\n        axios.get('http://localhost:5004/todos')\n            .then(response => setTodos(response.data))\n            .catch(error => console.error('Error:', error));\n    }, []);\n\n    const addTodo = () => {\n        axios.post('http://localhost:5004/todos', { text: newTodo })\n            .then(response => {\n                setTodos([...todos, response.data]);\n                setNewTodo('');\n            })\n            .catch(error => console.error('Error:', error));\n    };\n\n    const updateTodo = (id, completed) => {\n        axios.put(`http://localhost:5004/todos/${id}`, { completed: !completed })\n            .then(response => {\n                setTodos(todos.map(todo => todo._id === id ? response.data : todo));\n            })\n            .catch(error => console.error('Error:', error));\n    };\n\n    const deleteTodo = (id) => {\n        axios.delete(`http://localhost:5004/todos/${id}`)\n            .then(() => {\n                setTodos(todos.filter(todo => todo._id !== id));\n            })\n            .catch(error => console.error('Error:', error));\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Todo List</h1>\n            <input \n                type=\"text\" \n                value={newTodo} \n                onChange={(e) => setNewTodo(e.target.value)} \n                placeholder=\"Add new todo\" \n            />\n            <button onClick={addTodo}>Add Todo</button>\n            <TodoList \n                todos={todos} \n                updateTodo={updateTodo} \n                deleteTodo={deleteTodo} \n            />\n        </div>\n    );\n};\n\nexport default App;\n*/","map":{"version":3,"names":[],"sources":["C:/Users/saiku/OneDrive/Desktop/todoApp/frontend/src/App.js"],"sourcesContent":["/*\n\nimport React, { useState, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport './styles.css';\nimport axios from 'axios';\n\nconst App = () => {\n    const [todos, setTodos] = useState([]);\n    const [newTodo, setNewTodo] = useState('');\n\n    useEffect(() => {\n        axios.get('http://localhost:5004/todos')\n            .then(response => setTodos(response.data))\n            .catch(error => console.error('Error:', error));\n    }, []);\n\n    const addTodo = () => {\n        axios.post('http://localhost:5004/todos', { text: newTodo })\n            .then(response => {\n                setTodos([...todos, response.data]);\n                setNewTodo('');\n            })\n            .catch(error => console.error('Error:', error));\n    };\n\n    const updateTodo = (id, completed) => {\n        axios.put(`http://localhost:5004/todos/${id}`, { completed: !completed })\n            .then(response => {\n                setTodos(todos.map(todo => todo._id === id ? response.data : todo));\n            })\n            .catch(error => console.error('Error:', error));\n    };\n\n    const deleteTodo = (id) => {\n        axios.delete(`http://localhost:5004/todos/${id}`)\n            .then(() => {\n                setTodos(todos.filter(todo => todo._id !== id));\n            })\n            .catch(error => console.error('Error:', error));\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Todo List</h1>\n            <input \n                type=\"text\" \n                value={newTodo} \n                onChange={(e) => setNewTodo(e.target.value)} \n                placeholder=\"Add new todo\" \n            />\n            <button onClick={addTodo}>Add Todo</button>\n            <TodoList \n                todos={todos} \n                updateTodo={updateTodo} \n                deleteTodo={deleteTodo} \n            />\n        </div>\n    );\n};\n\nexport default App;\n*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}