{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saiku\\\\OneDrive\\\\Desktop\\\\todoApp\\\\frontend\\\\src\\\\components\\\\TodoItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoItem = ({\n  todo,\n  updateTodo,\n  deleteTodo,\n  startEditing\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editText, setEditText] = useState(todo.text);\n  const handleEditChange = e => {\n    setEditText(e.target.value);\n  };\n  const handleSave = () => {\n    startEditing(todo._id, editText);\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: todo.completed,\n      onChange: () => updateTodo(todo._id, todo.completed)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editText,\n        onChange: handleEditChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteTodo(todo._id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsEditing(!isEditing),\n      children: isEditing ? 'Cancel' : 'Edit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoItem, \"9G0I/Ehs06hoKMxR8C2J0PRUu3M=\");\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoItem","todo","updateTodo","deleteTodo","startEditing","_s","isEditing","setIsEditing","editText","setEditText","text","handleEditChange","e","target","value","handleSave","_id","children","type","checked","completed","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/saiku/OneDrive/Desktop/todoApp/frontend/src/components/TodoItem.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\nconst TodoItem = ({ todo, updateTodo, deleteTodo, startEditing }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [editText, setEditText] = useState(todo.text);\r\n\r\n    const handleEditChange = (e) => {\r\n        setEditText(e.target.value);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        startEditing(todo._id, editText);\r\n        setIsEditing(false);\r\n    };\r\n\r\n    return (\r\n        <li>\r\n            <input\r\n                type=\"checkbox\"\r\n                checked={todo.completed}\r\n                onChange={() => updateTodo(todo._id, todo.completed)}\r\n            />\r\n            {isEditing ? (\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={editText}\r\n                        onChange={handleEditChange}\r\n                    />\r\n                    <button onClick={handleSave}>Save</button>\r\n                </div>\r\n            ) : (\r\n                <span>{todo.text}</span>\r\n            )}\r\n            <button onClick={() => deleteTodo(todo._id)}>Delete</button>\r\n            <button onClick={() => setIsEditing(!isEditing)}>\r\n                {isEditing ? 'Cancel' : 'Edit'}\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default TodoItem;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACI,IAAI,CAACS,IAAI,CAAC;EAEnD,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC5BH,WAAW,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrBX,YAAY,CAACH,IAAI,CAACe,GAAG,EAAER,QAAQ,CAAC;IAChCD,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACIR,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MACImB,IAAI,EAAC,UAAU;MACfC,OAAO,EAAElB,IAAI,CAACmB,SAAU;MACxBC,QAAQ,EAAEA,CAAA,KAAMnB,UAAU,CAACD,IAAI,CAACe,GAAG,EAAEf,IAAI,CAACmB,SAAS;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC,EACDnB,SAAS,gBACNP,OAAA;MAAAkB,QAAA,gBACIlB,OAAA;QACImB,IAAI,EAAC,MAAM;QACXJ,KAAK,EAAEN,QAAS;QAChBa,QAAQ,EAAEV;MAAiB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACF1B,OAAA;QAAQ2B,OAAO,EAAEX,UAAW;QAAAE,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,gBAEN1B,OAAA;MAAAkB,QAAA,EAAOhB,IAAI,CAACS;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAC1B,eACD1B,OAAA;MAAQ2B,OAAO,EAAEA,CAAA,KAAMvB,UAAU,CAACF,IAAI,CAACe,GAAG,CAAE;MAAAC,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5D1B,OAAA;MAAQ2B,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAAC,CAACD,SAAS,CAAE;MAAAW,QAAA,EAC3CX,SAAS,GAAG,QAAQ,GAAG;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEb,CAAC;AAACpB,EAAA,CAtCIL,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}