{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saiku\\\\OneDrive\\\\Desktop\\\\todoApp\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todos, setTodos] = useState('');\n  const [newTodo, setNewTodo] = useState('');\n  useEffect(() => {\n    fetch('http://localhost:5000/todos').then(response => response.json()).then(data => setTodos(data));\n  }, []);\n  const addTodo = () => {\n    fetch('http://localhost:5000/todos', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        text: newTodo\n      })\n    }).then(response => response.json()).then(todo => setTodos([...todos, todo])).catch(error => console.error('Error:', error));\n  };\n  const updateTodo = (id, completed) => {\n    fetch(`http://localhost:5000/todos/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        completed: !completed\n      })\n    }).then(response => response.json()).then(updatedTodo => setTodos(todos.map(todo => todo._id === id ? updatedTodo : todo))).catch(error => console.error('Error:', error));\n  };\n  const deleteTodo = id => {\n    fetch(`http://localhost:5000/todos/${id}`, {\n      method: 'DELETE'\n    }).then(() => setTodos(todos.filter(todo => todo._id !== id))).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value),\n      placeholder: \"Add new todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      updateTodo: updateTodo,\n      deleteTodo: deleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"NvhHRdTvdu5xH/YK04+/gWTyqqc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TodoList","jsxDEV","_jsxDEV","App","_s","todos","setTodos","newTodo","setNewTodo","fetch","then","response","json","data","addTodo","method","headers","body","JSON","stringify","text","todo","catch","error","console","updateTodo","id","completed","updatedTodo","map","_id","deleteTodo","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/saiku/OneDrive/Desktop/todoApp/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TodoList from './components/TodoList';\nimport './styles.css';\n\nconst App = () => {\n    const [todos, setTodos] = useState('');\n    const [newTodo, setNewTodo] = useState('');\n\n    useEffect(() => {\n        fetch('http://localhost:5000/todos')\n            .then(response => response.json())\n            .then(data => setTodos(data));\n    }, []);\n\n    const addTodo = () => {\n        fetch('http://localhost:5000/todos', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ text: newTodo })\n        })\n        .then(response => response.json())\n        .then(todo => setTodos([...todos, todo]))\n        .catch(error => console.error('Error:', error));\n    };\n\n    const updateTodo = (id, completed) => {\n        fetch(`http://localhost:5000/todos/${id}`, {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ completed: !completed })\n        })\n        .then(response => response.json())\n        .then(updatedTodo => setTodos(todos.map(todo => todo._id === id ? updatedTodo : todo)))\n        .catch(error => console.error('Error:', error));\n    };\n\n    const deleteTodo = (id) => {\n        fetch(`http://localhost:5000/todos/${id}`, { method: 'DELETE' })\n            .then(() => setTodos(todos.filter(todo => todo._id !== id)))\n            .catch(error => console.error('Error:', error));\n    };\n\n    return (\n        <div className=\"App\">\n            <h1>Todo List</h1>\n            <input \n                type=\"text\" \n                value={newTodo} \n                onChange={(e) => setNewTodo(e.target.value)} \n                placeholder=\"Add new todo\" \n            />\n            <button onClick={addTodo}>Add Todo</button>\n            <TodoList \n                todos={todos} \n                updateTodo={updateTodo} \n                deleteTodo={deleteTodo} \n            />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}