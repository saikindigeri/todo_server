{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saiku\\\\OneDrive\\\\Desktop\\\\todoApp\\\\frontend\\\\src\\\\components\\\\TodoItem.js\",\n  _s = $RefreshSig$();\n// src/components/TodoItem.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoItem = ({\n  todo,\n  onUpdate,\n  onDelete\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [updatedTitle, setUpdatedTitle] = useState(todo.title);\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleSave = async () => {\n    const response = await fetch(`http://localhost:5000/todos/${todo._id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: updatedTitle,\n        completed: todo.completed\n      })\n    });\n    if (response.ok) {\n      const updatedTodo = await response.json();\n      onUpdate(updatedTodo);\n      setIsEditing(false);\n    } else {\n      console.error('Failed to update todo');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-item\",\n    children: isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: updatedTitle,\n        onChange: e => setUpdatedTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: todo.completed,\n        onChange: () => onUpdate({\n          ...todo,\n          completed: !todo.completed\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(todo._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoItem, \"/KGPadN4cmNDKMqK+xplnif+lPk=\");\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoItem","todo","onUpdate","onDelete","_s","isEditing","setIsEditing","updatedTitle","setUpdatedTitle","title","handleEdit","handleSave","response","fetch","_id","method","headers","body","JSON","stringify","completed","ok","updatedTodo","json","console","error","className","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","checked","_c","$RefreshReg$"],"sources":["C:/Users/saiku/OneDrive/Desktop/todoApp/frontend/src/components/TodoItem.js"],"sourcesContent":["// src/components/TodoItem.js\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst TodoItem = ({ todo, onUpdate, onDelete }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [updatedTitle, setUpdatedTitle] = useState(todo.title);\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const response = await fetch(`http://localhost:5000/todos/${todo._id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ title: updatedTitle, completed: todo.completed })\r\n    });\r\n\r\n    if (response.ok) {\r\n      const updatedTodo = await response.json();\r\n      onUpdate(updatedTodo);\r\n      setIsEditing(false);\r\n    } else {\r\n      console.error('Failed to update todo');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-item\">\r\n      {isEditing ? (\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={updatedTitle}\r\n            onChange={(e) => setUpdatedTitle(e.target.value)}\r\n          />\r\n          <button onClick={handleSave}>Save</button>\r\n          <button onClick={() => setIsEditing(false)}>Cancel</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={todo.completed}\r\n            onChange={() => onUpdate({ ...todo, completed: !todo.completed })}\r\n          />\r\n          <span>{todo.title}</span>\r\n          <button onClick={handleEdit}>Edit</button>\r\n          <button onClick={() => onDelete(todo._id)}>Delete</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}